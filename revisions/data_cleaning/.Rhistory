# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
summary(course_ind16)
summary(course_ind20)
train_test = generateTrainTest(x0, seed = 777)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
summary(course_ind16)
summary(course_ind20)
train_test = generateTrainTest(x0, seed = 600)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
train_test = generateTrainTest(x0, seed = 500)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra
summary(course_ind20)
train_test = generateTrainTest(x0, seed = 40)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
summary(course_ind20)
train_test = generateTrainTest(x0, seed = 30)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
summary(course_ind20)
getMSE(course_ind16, x_test, x_test$course) # 141.5527
getMSE(course_ind20, x_test, x_test$course) # 138.2524
train_test = generateTrainTest(x0, seed = 31)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
train_test = generateTrainTest(x0, seed = 31)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
train_test = generateTrainTest(x0, seed = 32)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
train_test = generateTrainTest(x0, seed = 100)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
train_test = generateTrainTest(x0, seed = 29)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
train_test = generateTrainTest(x0, seed = 27)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
train_test = generateTrainTest(x0, seed = 30)
x_train = train_test[[1]]   # 741 x 37
x_test  = train_test[[2]]   # 366 x 37
## before completing modeling, fix encoding for class
#### ------    regression for modeling course average old vs. new   ------- ####
# questions not included in the old MUST exam
new_qs = c("MQ6", "MQ16", "MQ17", "MQ18")
cats   = c("mult", "div", "frac", "log_exp", "chem") # category names
# (1) model using the total must score of old vs. new
# (1a) course_old: course average ~ old must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must16)
must16_coeffs = summary(course_must16)$coefficients
getMSE(course_must16, x_test, x_test$course) # 139.3325
# (1b) course_new: course average ~ new must + . (741 x 10 training matrix)
vars_omit = c(MUST_q, cats, "pass", "old_must")
dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 10
course_must20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_must20)
must20_coeffs = summary(course_must20)$coefficients
getMSE(course_must20, x_test, x_test$course) # 136.437
# (2) model using indicator for each question old vs. new (nested model)
## (2a) course_ind16: course average ~ 16 must questions (741 x 25 training)
# omit the 4 questions included in the new MUST
vars_omit = c(cats, new_qs, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 25
course_ind16 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
# summary(course_ind16)
course_ind16_coeffs = summary(course_ind16)$coefficients
getMSE(course_ind16, x_test, x_test$course) # 141.5527
# (2b) course_ind20: course average ~ all 20 must questions (741 x 29 training)
vars_omit = c(cats, "pass", "old_must", "must")
# dim(x_train[,!(names(x0) %in% vars_omit)]) # 741 x 29
course_ind20 = lm(course ~ ., x_train[,!(names(x0) %in% vars_omit)])
summary(course_ind20)
course_ind20_coeffs = summary(course_ind20)$coefficients
getMSE(course_ind20, x_test, x_test$course) # 138.2524
# test for significance between the nested models
anova(course_ind16, course_ind20) # p = 0.02883 < 0.05 --> extra q's significant
